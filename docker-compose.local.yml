version: '3.8'

services:
  postgresql:
    image: postgres:12-alpine
    container_name: pg-gostore
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=go_store
    volumes:
      - ./.local/db/pgdata:/var/lib/postgresql/data
    networks:
      - web_api

  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    container_name: myminio
    environment:
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=minio123
    command: server --address :9000 --console-address :9001 /data
    volumes:
      - /home/alfan/private_projects/lovit/local-deps/volume/minio:/data
    networks:
      - web_api
    
  mc:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        /usr/bin/mc config host rm local;
        /usr/bin/mc config host add --api s3v4 s3 http://myminio:9000 minio minio123;
        /usr/bin/mc mb s3/static/;
        /usr/bin/mc anonymous set download s3/static;
      "
    networks:
      - web_api

  # minio:
  #   image: quay.io/minio/minio
  #   command: server --address ":9000" --console-address ":9001" /data
  #   ports:
  #     - '9000:9000'
  #     - '9001:9001'
  #   environment:
  #     MINIO_ROOT_USER: minio
  #     MINIO_ROOT_PASSWORD: minio123
  #   networks:
  #     - web_api
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8888/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3
  #   volumes:
  #     - ./.local/minio:/data
  #   restart: always

networks:
  web_api:
    driver: bridge